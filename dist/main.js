!function(e){var n={};function t(a){if(n[a])return n[a].exports;var o=n[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(a,o,function(n){return e[n]}.bind(null,o));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);const a=Object.freeze(Object.create(null));class o{constructor(e,n,t){Object.defineProperties(this,{value:{value:e,enumerable:!0},members:{value:n,enumerable:!1},label:{value:t,enumerable:!0}}),Object.freeze(this)}when(e){for(const n of this.members)if(!e.hasOwnProperty(n))throw new Error("unhandled case "+n);for(const n of Object.getOwnPropertyNames(e))if(Object.is(this.value,n))return e[n](this);throw new Error("unreachable")}get[Symbol.toStringTag](){return`${this.label}.${this.value}`}static fromArray(e,n){const t=new Map,i=new Set(e);return void 0===n&&(n="<anonymous>"),e.forEach(e=>{t.set(e,new o(e,i,n))}),new Proxy(a,{get(e,a,o){if(t.has(a))return t.get(a);if(a===Symbol.iterator)return t.values.bind(t);if("toString"===a)return()=>`${n}(${Array.from(i).join("|")})`;if("symbol"==typeof a)return Reflect.get(Object,a,o);throw new Error(`"${String(a)}" not found in ${n}`)},set(){throw new Error(`Enum ${n} cannot be mutated`)}})}}const i=Symbol("NO_VALUE"),r=Symbol("SET_START"),s=Symbol("ARY_START"),l=Symbol("MAP_START"),c=Symbol("OBJ_START"),d=Symbol("ITER_END");class h{constructor(e){this.value=e,this.children=new Map}getOrInsert(e,n,t){if(0===e.length)return this.value===i&&(this.value=n(...t)),this.value;const[a,...o]=e;if(a instanceof Array)return this.getOrInsert([s,...a,d,...o],n,t);if(a instanceof Set){const e=[...a];return e.sort(),this.getOrInsert([r,...e,d,...o],n,t)}if(a instanceof Map){const e=[...a.entries()].sort();return this.getOrInsert([l,...e,d,...o],n,t)}if(a instanceof Object){const e=Object.entries(a).sort();return this.getOrInsert([c,...e,d,...o],n,t)}return this.children.has(a)||this.children.set(a,new h(i)),this.children.get(a).getOrInsert(o,n,t)}}const u=e=>{const n=new h(i);return(...t)=>n.getOrInsert(t,e,t)},p=o.fromArray(["AH","IT","FR","GB","GE","RU"],"Nation"),m={1:2,2:4,3:6,4:9,5:12,6:16,7:20,8:25,9:30},y=u((e,n)=>({nation:e,number:n,cost:m[n]})),g=(e,n)=>{const t=new Set(n);return u(n=>{const[a,o,i]=((e,n)=>{const t=new Set,a=new Set,o=new Set;for(const o of e)n.has(o)?a.add(o):t.add(o);for(const t of n)e.has(t)?a.add(t):o.add(t);return[t,a,o]})(t,new Set(Object.keys(n||{})));if(a.size>0||i.size>0)throw new Error(JSON.stringify({expected:[...a],unexpected:[...i],ok:[...o],type:e}));return{type:e,payload:n}})};var b={noop:Object.freeze({type:"noop"}),initialize:g("initialize",["players"]),bondPurchase:g("bondPurchase",["nation","player","cost"]),buildFactory:g("buildFactory",["province"]),coexist:g("coexist",["province","incumbent","challenger"]),endManeuver:g("endManeuver",[]),fight:g("fight",["province","incumbent","challenger"]),import:g("import",["placements"]),maneuver:g("maneuver",["origin","destination"]),production:g("production",["province"]),rondel:g("rondel",["nation","cost","slot"])};const f=[{isOcean:!0,name:"bayofbiscay"},{isOcean:!0,name:"blacksea"},{isOcean:!0,name:"westernmediterraneansea"},{isOcean:!0,name:"ioniansea"},{isOcean:!0,name:"easternmediterraneansea"},{isOcean:!0,name:"northsea"},{isOcean:!0,name:"northatlantic"},{isOcean:!0,name:"balticsea"},{isOcean:!0,name:"englishchannel"},{isOcean:!1,name:"turkey"},{isOcean:!1,name:"bulgaria"},{isOcean:!1,name:"romania"},{isOcean:!1,name:"westbalkan"},{isOcean:!1,name:"greece"},{isOcean:!1,name:"tunis"},{isOcean:!1,name:"algeria"},{isOcean:!1,name:"morocco"},{isOcean:!1,name:"spain"},{isOcean:!1,name:"portugal"},{isOcean:!1,name:"belgium"},{isOcean:!1,name:"holland"},{isOcean:!1,name:"denmark"},{isOcean:!1,name:"norway"},{isOcean:!1,name:"sweden"},{nation:p.RU,factoryType:"armaments",name:"moscow",isHome:!0},{nation:p.RU,factoryType:"armaments",name:"warsaw"},{nation:p.RU,factoryType:"shipyard",name:"stpetersburg"},{nation:p.RU,factoryType:"armaments",name:"kiev"},{nation:p.RU,factoryType:"shipyard",name:"odessa",isHome:!0},{nation:p.GE,factoryType:"shipyard",name:"danzig"},{nation:p.GE,factoryType:"armaments",name:"berlin",isHome:!0},{nation:p.GE,factoryType:"armaments",name:"munich"},{nation:p.GE,factoryType:"armaments",name:"cologne"},{nation:p.GE,factoryType:"shipyard",name:"hamburg",isHome:!0},{nation:p.GB,factoryType:"shipyard",name:"dublin"},{nation:p.GB,factoryType:"shipyard",name:"edinburgh"},{nation:p.GB,factoryType:"shipyard",name:"liverpool",isHome:!0},{nation:p.GB,factoryType:"armaments",name:"sheffield"},{nation:p.GB,factoryType:"shipyard",name:"london",isHome:!0},{nation:p.FR,factoryType:"armaments",name:"paris",isHome:!0},{nation:p.FR,factoryType:"armaments",name:"dijon"},{nation:p.FR,factoryType:"shipyard",name:"marseille"},{nation:p.FR,factoryType:"shipyard",name:"bordeaux",isHome:!0},{nation:p.FR,factoryType:"shipyard",name:"brest"},{nation:p.IT,factoryType:"shipyard",name:"genoa"},{nation:p.IT,factoryType:"shipyard",name:"venice"},{nation:p.IT,factoryType:"armaments",name:"florence"},{nation:p.IT,factoryType:"armaments",name:"rome",isHome:!0},{nation:p.IT,factoryType:"shipyard",name:"naples",isHome:!0},{nation:p.AH,factoryType:"shipyard",name:"trieste"},{nation:p.AH,factoryType:"armaments",name:"vienna",isHome:!0},{nation:p.AH,factoryType:"armaments",name:"budapest",isHome:!0},{nation:p.AH,factoryType:"armaments",name:"prague"},{nation:p.AH,factoryType:"armaments",name:"lemberg"}];var v=new class{constructor({nodes:e,edges:n}){this.graph=new Map,this.byNation=new Map,this.setupGraph(e),this.setImmediateNeighbors(n)}setupGraph(e){for(const{name:n,nation:t,isOcean:a,factoryType:o}of e)this.graph.set(n,{nation:t,neighbors:new Set,isOcean:a,factoryType:o}),this.byNation.has(t)||this.byNation.set(t,new Set),this.byNation.get(t).add(n)}setImmediateNeighbors(e){e.forEach(([e,n])=>{this.graph.get(e).neighbors.add(n),this.graph.get(n).neighbors.add(e)})}neighborsFor({origin:e,nation:n,isFleet:t,friendlyFleets:a}){this.validate(e);const o=new Set;for(const n of this.graph.get(e).neighbors)o.add(n);if(n===this.graph.get(e).nation&&!t)for(const e of this.byNation.get(n))for(const n of this.graph.get(e).neighbors)o.add(n);if(!t)for(const e of o)if(this.graph.get(e).isOcean&&a.has(e))for(const n of this.graph.get(e).neighbors)o.add(n);for(const e of o)this.graph.get(e).isOcean^t&&o.delete(e);return o.delete(e),o}validate(e){if(!this.graph.has(e))throw new Error(`province ${e} not found. Available provinces are: ${[...this.graph.keys()]}`)}}({nodes:f,edges:[["moscow","kiev"],["moscow","warsaw"],["moscow","stpetersburg"],["warsaw","stpetersburg"],["warsaw","moscow"],["warsaw","kiev"],["warsaw","lemberg"],["warsaw","prague"],["warsaw","danzig"],["stpetersburg","moscow"],["stpetersburg","kiev"],["stpetersburg","warsaw"],["stpetersburg","danzig"],["stpetersburg","balticsea"],["kiev","moscow"],["kiev","odessa"],["kiev","romania"],["kiev","lemberg"],["kiev","warsaw"],["odessa","kiev"],["odessa","blacksea"],["odessa","romania"],["blacksea","odessa"],["blacksea","turkey"],["blacksea","easternmediterraneansea"],["blacksea","bulgaria"],["blacksea","romania"],["turkey","blacksea"],["turkey","easternmediterraneansea"],["turkey","bulgaria"],["easternmediterraneansea","turkey"],["easternmediterraneansea","ioniansea"],["easternmediterraneansea","greece"],["easternmediterraneansea","bulgaria"],["easternmediterraneansea","blacksea"],["bulgaria","romania"],["bulgaria","blacksea"],["bulgaria","turkey"],["bulgaria","easternmediterraneansea"],["bulgaria","greece"],["bulgaria","westbalkan"],["romania","lemberg"],["romania","kiev"],["romania","odessa"],["romania","blacksea"],["romania","bulgaria"],["romania","westbalkan"],["romania","budapest"],["westbalkan","budapest"],["westbalkan","romania"],["westbalkan","bulgaria"],["westbalkan","greece"],["westbalkan","ioniansea"],["westbalkan","trieste"],["greece","westbalkan"],["greece","bulgaria"],["greece","easternmediterraneansea"],["greece","ioniansea"],["ioniansea","trieste"],["ioniansea","westbalkan"],["ioniansea","greece"],["ioniansea","easternmediterraneansea"],["ioniansea","tunis"],["ioniansea","westernmediterraneansea"],["ioniansea","naples"],["lemberg","kiev"],["lemberg","romania"],["lemberg","budapest"],["lemberg","prague"],["lemberg","warsaw"],["budapest","lemberg"],["budapest","romania"],["budapest","westbalkan"],["budapest","trieste"],["budapest","vienna"],["budapest","prague"],["prague","danzig"],["prague","warsaw"],["prague","lemberg"],["prague","budapest"],["prague","vienna"],["prague","munich"],["prague","berlin"],["vienna","prague"],["vienna","budapest"],["vienna","trieste"],["vienna","venice"],["vienna","munich"],["trieste","vienna"],["trieste","budapest"],["trieste","westbalkan"],["trieste","ioniansea"],["trieste","venice"],["venice","vienna"],["venice","trieste"],["venice","ioniansea"],["venice","rome"],["venice","florence"],["venice","genoa"],["rome","venice"],["rome","ioniansea"],["rome","naples"],["rome","westernmediterraneansea"],["rome","florence"],["naples","rome"],["naples","ioniansea"],["naples","westernmediterraneansea"],["florence","genoa"],["florence","venice"],["florence","rome"],["florence","westernmediterraneansea"],["genoa","vienna"],["genoa","venice"],["genoa","florence"],["genoa","westernmediterraneansea"],["genoa","marseille"],["marseille","dijon"],["marseille","genoa"],["marseille","westernmediterraneansea"],["marseille","spain"],["marseille","bordeaux"],["bordeaux","brest"],["bordeaux","dijon"],["bordeaux","marseille"],["bordeaux","spain"],["bordeaux","bayofbiscay"],["brest","englishchannel"],["brest","paris"],["brest","dijon"],["brest","bordeaux"],["brest","bayofbiscay"],["paris","englishchannel"],["paris","belgium"],["paris","dijon"],["paris","brest"],["dijon","paris"],["dijon","belgium"],["dijon","munich"],["dijon","marseille"],["dijon","bordeaux"],["dijon","brest"],["tunis","easternmediterraneansea"],["tunis","westernmediterraneansea"],["tunis","algeria"],["algeria","westernmediterraneansea"],["algeria","tunis"],["algeria","morocco"],["morocco","bayofbiscay"],["morocco","algeria"],["westernmediterraneansea","marseille"],["westernmediterraneansea","genoa"],["westernmediterraneansea","florence"],["westernmediterraneansea","rome"],["westernmediterraneansea","naples"],["westernmediterraneansea","ioniansea"],["westernmediterraneansea","tunis"],["westernmediterraneansea","algeria"],["westernmediterraneansea","bayofbiscay"],["westernmediterraneansea","spain"],["spain","bayofbiscay"],["spain","bordeaux"],["spain","marseille"],["spain","westernmediterraneansea"],["spain","portugal"],["portugal","bayofbiscay"],["portugal","spain"],["bayofbiscay","northatlantic"],["bayofbiscay","englishchannel"],["bayofbiscay","brest"],["bayofbiscay","bordeaux"],["bayofbiscay","spain"],["bayofbiscay","portugal"],["bayofbiscay","morocco"],["northatlantic","dublin"],["northatlantic","edinburgh"],["northatlantic","northsea"],["northatlantic","liverpool"],["northatlantic","london"],["northatlantic","englishchannel"],["northatlantic","bayofbiscay"],["dublin","northatlantic"],["edinburgh","northatlantic"],["edinburgh","northsea"],["edinburgh","sheffield"],["edinburgh","liverpool"],["liverpool","edinburgh"],["liverpool","sheffield"],["liverpool","london"],["liverpool","northatlantic"],["sheffield","edinburgh"],["sheffield","northsea"],["sheffield","london"],["sheffield","liverpool"],["london","sheffield"],["london","northsea"],["london","englishchannel"],["london","northatlantic"],["london","liverpool"],["northsea","norway"],["northsea","balticsea"],["northsea","denmark"],["northsea","hamburg"],["northsea","holland"],["northsea","englishchannel"],["northsea","london"],["northsea","sheffield"],["northsea","edinburgh"],["northsea","northatlantic"],["englishchannel","northatlantic"],["englishchannel","london"],["englishchannel","holland"],["englishchannel","belgium"],["englishchannel","paris"],["englishchannel","brest"],["englishchannel","bayofbiscay"],["belgium","englishchannel"],["belgium","holland"],["belgium","cologne"],["belgium","munich"],["belgium","dijon"],["belgium","paris"],["holland","northsea"],["holland","hamburg"],["holland","cologne"],["holland","belgium"],["holland","englishchannel"],["cologne","belgium"],["cologne","holland"],["cologne","hamburg"],["cologne","berlin"],["cologne","munich"],["munich","cologne"],["munich","berlin"],["munich","prague"],["munich","vienna"],["munich","dijon"],["munich","belgium"],["berlin","balticsea"],["berlin","danzig"],["berlin","prague"],["berlin","munich"],["berlin","cologne"],["berlin","hamburg"],["hamburg","denmark"],["hamburg","balticsea"],["hamburg","berlin"],["hamburg","cologne"],["hamburg","holland"],["hamburg","northsea"],["danzig","balticsea"],["danzig","stpetersburg"],["danzig","warsaw"],["danzig","prague"],["danzig","berlin"],["norway","northsea"],["norway","balticsea"],["norway","sweden"],["sweden","norway"],["sweden","balticsea"],["balticsea","stpetersburg"],["balticsea","danzig"],["balticsea","berlin"],["balticsea","hamburg"],["balticsea","denmark"],["balticsea","northsea"],["balticsea","sweden"]]});const w=e=>n=>{throw new Error(`got=${n.value}, want=${e}`)};var T=({players:e,provinceNames:n})=>{const t={2:({id:e,nation:n})=>n.when({AH:()=>[{id:e,nation:p.AH},{id:e,nation:p.FR},{id:e,nation:p.GE}],IT:()=>[{id:e,nation:p.IT},{id:e,nation:p.RU},{id:e,nation:p.GB}],FR:w("AH|IT"),GB:w("AH|IT"),RU:w("AH|IT"),GE:w("AH|IT")}),3:({id:e,nation:n})=>n.when({AH:()=>[{id:e,nation:p.AH},{id:e,nation:p.GB}],IT:()=>[{id:e,nation:p.IT},{id:e,nation:p.RU}],FR:()=>[{id:e,nation:p.FR},{id:e,nation:p.GE}],GB:w("AH|IT|FR"),RU:w("AH|IT|FR"),GE:w("AH|IT|FR")}),4:e=>[e],5:e=>[e],6:e=>[e]},a={availableBonds:new Set(["AH","IT","FR","GB","GE","RU"].map(e=>Object.keys(m).map(n=>y(p[e],parseInt(n)))).flat()),nations:new Map,order:e.map(e=>e.id),players:{}};e.map(t[e.length]).flat().forEach(({id:e,nation:n})=>{void 0===a.players[e]&&(a.players[e]={name:e,cash:2,bonds:new Set});const t=n.when({GE:()=>p.IT,RU:()=>p.FR,AH:()=>p.GE,IT:()=>p.GB,FR:()=>p.AH,GB:()=>p.RU});a.availableBonds.delete(y(n,4)),a.availableBonds.delete(y(t,1)),a.players[e].bonds.add(y(n,4)),a.players[e].bonds.add(y(t,1))});const o=new Set;Object.keys(a.players).forEach(e=>{for(const n of a.players[e].bonds)o.add(n)});for(const e of p){const n=[...o].filter(n=>n.nation===e).sort(({cost:e},{cost:n})=>e<n?1:e>n?-1:0),t=n[0],i=Object.keys(a.players).find(e=>a.players[e].bonds.has(t))||null,r=n.reduce((e,{cost:n})=>e+n,0);a.nations.set(e,{controller:i,treasury:r,rondelPosition:null,flagCount:0,powerPoints:0,taxChartPosition:5});const s=a.nations.get(p.AH).controller,l=a.order.indexOf(s);a.investorCardHolder=0===l?a.order[a.order.length-1]:a.order[l-1]}const i=new Map;[p.AH,p.IT,p.FR,p.GB,p.GE,p.RU].map(e=>{i.set(e,(()=>{const e=new Map;for(const t of n)e.set(t,{armies:0,fleets:0});return e})())}),a.units=i;const r=new Map,s=["vienna","budapest","paris","berlin","rome","moscow"],l=["bordeaux","london","liverpool","hamburg","naples","odessa"];for(const e of n){let n=null;s.includes(e)?n="armaments":l.includes(e)&&(n="shipyard"),r.set(e,{factory:n})}return a.provinces=r,a.currentNation=p.AH,a};class A{static fromLog(e){let n=new A;return e.forEach(e=>n.tick(e)),n}constructor(e){this.board=e||v,this.log=[]}tick(e){switch(this.log.push(e),e.type){case"noop":return;case"initialize":const n=T({players:e.payload.players,provinceNames:Array.from(this.board.graph.keys())});return this.availableBonds=n.availableBonds,this.currentNation=n.currentNation,this.investorCardHolder=n.investorCardHolder,this.nations=n.nations,this.order=n.order,this.players=n.players,this.provinces=n.provinces,this.units=n.units,this.currentPlayerName=this.nations.get(this.currentNation).controller,void(this.availableActions=new Set(this.rondelActions(p.AH)));case"bondPurchase":return this.purchaseBond(e),this.handleAdvancePlayer(),void(this.availableActions=new Set(this.rondelActions(this.currentNation)));case"endManeuver":return this.currentNation=this.nextNation(this.currentNation),void(this.availableActions=new Set(this.rondelActions(this.currentNation)));case"fight":return this.units.get(p.FR).get(e.payload.province).fleets-=1,this.units.get(p.IT).get(e.payload.province).fleets-=1,void(this.provinces.get(e.payload.province).flag=e.payload.incumbent);case"buildFactory":return this.buildFactory(e),"maneuver1"===this.nations.get(this.currentNation).previousRondelPosition&&this.endOfInvestorTurn(),this.handleAdvancePlayer(),void(this.availableActions=new Set(this.rondelActions(this.currentNation)));case"import":e.payload.placements.forEach(({province:e,type:n})=>{const t=this.board.graph.get(e).nation;"army"===n?this.units.get(t).get(e).armies++:this.units.get(t).get(e).fleets++,this.nations.get(t).treasury--});return["maneuver1","production1","factory","taxation","maneuver2"].includes(this.nations.get(this.currentNation).previousRondelPosition)?void this.endOfInvestorTurn():(this.handleAdvancePlayer(),void(this.availableActions=new Set(this.rondelActions(this.currentNation))));case"maneuver":const t=e.payload.origin,a=e.payload.destination,o=this.board.graph.get(a).isOcean?"fleet":"army";this.provinces.get(a).flag=this.currentNation,this.nations.get(this.currentNation).flagCount+=1,"fleet"===o&&(this.units.get(this.currentNation).get(t).fleets--,this.units.get(this.currentNation).get(a).fleets++),"army"===o&&(this.units.get(this.currentNation).get(t).armies--,this.units.get(this.currentNation).get(a).armies++,this.unitsToMove=this.unitsToMove.filter(([e,n])=>"army"===n));const i=this.unitsToMove.findIndex(n=>n[0]===e.payload.origin&&n[1]===o);this.unitsToMove.splice(i,1);for(const[e,n]of this.nations)if(e!==this.currentNation&&(this.units.get(e).get(a).armies>0||this.units.get(e).get(a).fleets>0))return void(this.availableActions=new Set([b.coexist({province:a,incumbent:e,challenger:this.currentNation}),b.fight({province:a,incumbent:e,challenger:this.currentNation})]));if(this.unitsToMove.length>0){const e=new Map,n=new Map,t=new Set([b.endManeuver()]);this.unitsToMove.forEach(([a,o])=>{const i=this.units.get(this.currentNation).get(a);i.fleets>0?e.set(a,i.fleets):i.armies>0&&n.set(a,i.armies);for(const[n,a]of e)for(const e of this.board.neighborsFor({origin:n,nation:this.currentNation,isFleet:!0,friendlyFleets:new Set}))t.add(b.maneuver({origin:n,destination:e}));const r=new Set;for(const[e,n]of this.units.get(this.currentNation))n.fleets>0&&r.add(e);for(const[e,a]of n)for(const n of this.board.neighborsFor({origin:e,nation:this.currentNation,isFleet:!1,friendlyFleets:r}))t.add(b.maneuver({origin:e,destination:n}))}),this.availableActions=t}else{if("maneuver2"===this.nations.get(this.currentNation).rondelPosition){["factory","production1","maneuver1"].includes(this.nations.get(this.currentNation).previousRondelPosition)&&this.endOfInvestorTurn()}this.currentNation=this.nextNation(this.currentNation),this.availableActions=new Set(this.rondelActions(this.currentNation))}return;case"rondel":switch(this.currentNation=e.payload.nation,this.nations.get(this.currentNation).previousRondelPosition=this.nations.get(this.currentNation).rondelPosition,this.nations.get(this.currentNation).rondelPosition=e.payload.slot,this.players[this.currentPlayerName].cash-=e.payload.cost,e.payload.slot){case"investor":for(const n of Object.keys(this.players))n!==this.currentPlayerName&&this.playerBondsOfNation(n,e.payload.nation).forEach(t=>{this.nations.get(e.payload.nation).treasury>=t.number?this.nations.get(e.payload.nation).treasury-=t.number:this.players[this.currentPlayerName].cash-=t.number,this.players[n].cash+=t.number});const n=[...this.players[this.currentPlayerName].bonds].filter(n=>n.nation===e.payload.nation).reduce((e,n)=>e+n.number,0);return this.nations.get(e.payload.nation).treasury>n&&(this.players[this.currentPlayerName].cash+=n,this.nations.get(e.payload.nation).treasury-=n),void this.endOfInvestorTurn();case"import":const t=new Set([b.import({placements:[]})]),a=this.board.byNation.get(e.payload.nation);for(const e of a){t.add(b.import({placements:[{province:e,type:"army"}]}));for(const n of a)if(n!==e){t.add(b.import({placements:[{province:e,type:"army"},{province:n,type:"army"}]}));for(const o of a)e!==o&&n!==o&&t.add(b.import({placements:[{province:e,type:"army"},{province:n,type:"army"},{province:o,type:"army"}]}))}}return void(this.availableActions=t);case"production1":case"production2":if(Array.from(this.board.byNation.get(e.payload.nation)).filter(e=>null!==this.provinces.get(e).factory).forEach(n=>{"shipyard"===this.provinces.get(n).factory?this.units.get(e.payload.nation).get(n).fleets++:this.units.get(e.payload.nation).get(n).armies++}),"production2"===e.payload.slot){if(["maneuver1","production1","factory","taxation"].includes(this.nations.get(this.currentNation).previousRondelPosition))return this.endOfInvestorTurn(),void this.handleAdvancePlayer()}return this.handleAdvancePlayer(),void(this.availableActions=new Set(this.rondelActions(this.currentNation)));case"taxation":const o=e.payload.nation,i=this.nations.get(o),r=2*this.factoryCount(o)+i.flagCount;i.treasury+=r-this.unitCount(o),this.players[this.nations.get(o).controller].cash+=r-i.taxChartPosition,i.taxChartPosition=r,i.powerPoints+=6===r?1:3,this.availableActions=new Set(this.rondelActions(this.nextNation(this.currentNation)));return void(["maneuver1","production1"].includes(this.nations.get(this.currentNation).previousRondelPosition)&&this.endOfInvestorTurn());case"maneuver1":case"maneuver2":const s=new Set([b.endManeuver()]);this.unitsToMove=[];for(const[n,t]of this.units.get(e.payload.nation)){let e=t.fleets,a=t.armies;for(;e>0||a>0;)e>0?(this.unitsToMove.push([n,"fleet"]),e--):a>0&&(this.unitsToMove.push([n,"army"]),a--)}const l=new Map,c=new Map;for(const[n,t]of this.units.get(e.payload.nation))t.fleets>0&&l.set(n,t.fleets);for(const[n,t]of l)for(const t of this.board.neighborsFor({origin:n,nation:e.payload.nation,isFleet:!0,friendlyFleets:new Set}))s.add(b.maneuver({origin:n,destination:t}));for(const[n,t]of this.units.get(e.payload.nation))t.armies>0&&c.set(n,t.armies);for(const[n,t]of c)for(const t of this.board.neighborsFor({origin:n,nation:e.payload.nation,isFleet:!1,friendlyFleets:new Set}))s.add(b.maneuver({origin:n,destination:t}));return void(this.availableActions=s);case"factory":return void(this.availableActions=new Set(this.buildFactoryAction(e.payload.nation)))}}}endOfInvestorTurn(){this.players[this.investorCardHolder].cash+=2,this.availableActions=new Set([...this.availableBonds].filter(e=>{const n=this.investorCardHolder,t=[...this.players[n].bonds].filter(n=>n.nation===e.nation).map(e=>e.cost),a=Math.max(t)||0;return e.cost<=this.players[n].cash+a}).map(e=>b.bondPurchase({nation:e.nation,player:this.investorCardHolder,cost:e.cost})))}playerBondsOfNation(e,n){const t=[];for(const a of this.players[e].bonds)a.nation===n&&t.push(a);return t}handleAdvancePlayer(){this.currentNation=this.nextNation(this.currentNation),this.currentPlayerName=this.nations.get(this.currentNation).controller}purchaseBond(e){const n={2:1,4:2,6:3,9:4,12:5,16:6,20:7,25:8,30:9},t=this.players[e.payload.player].bonds;if(e.payload.cost>this.players[e.payload.player].cash){const a=[...t].filter(({nation:n})=>n===e.payload.nation).map(({cost:e})=>e)[0];if(void 0===a)throw new Error(`${e.payload.player} does not have any bonds to trade for ${e.payload.nation}`);const o=y(e.payload.nation,n[a]),i=e.payload.cost-o.cost;this.nations.get(e.payload.nation).treasury+=i,this.availableBonds.add(o),this.players[e.payload.player].cash-=i,this.players[e.payload.player].bonds.delete(o)}else this.nations.get(e.payload.nation).treasury+=e.payload.cost,this.players[e.payload.player].cash-=e.payload.cost;const a=y(e.payload.nation,n[e.payload.cost]);if(!this.availableBonds.has(a))throw new Error(bond+" not available");this.players[e.payload.player].bonds.add(a),this.availableBonds.delete(a),null===this.nations.get(e.payload.nation).controller&&(this.nations.get(e.payload.nation).controller=e.payload.player),this.totalInvestmentInNation(e.payload.player,e.payload.nation)>this.totalInvestmentInNation(this.nations.get(e.payload.nation).controller,e.payload.nation)&&(this.nations.get(e.payload.nation).controller=e.payload.player),this.advanceInvestorCard()}totalInvestmentInNation(e,n){return[...this.players[e].bonds].filter(e=>e.nation===n).reduce((e,n)=>e+n.cost,0)}advanceInvestorCard(){if(this.investorCardHolder){const e=this.order.indexOf(this.investorCardHolder);this.investorCardHolder=0===e?this.order[this.order.length-1]:this.order[e-1]}}unitCount(e){let n=0;for(const[t,a]of this.units.get(e))n+=a.armies,n+=a.fleets;return n}buildFactory(e){this.provinces.get(e.payload.province).factory=this.board.graph.get(e.payload.province).factoryType,this.nations.get(this.currentNation).treasury-=5}rondelActions(e){const n=["factory","production1","maneuver1","investor","import","production2","maneuver2","taxation"],t=this.nations.get(e).rondelPosition,a=new Set;if(t){const o=n.indexOf(t),i=o-8;[n[o+1]||n[i+1],n[o+2]||n[i+2],n[o+3]||n[i+3]].forEach(n=>{a.add(b.rondel({nation:e,cost:0,slot:n}))}),a.add(b.rondel({nation:e,cost:2,slot:n[o+4]||n[i+4]})),a.add(b.rondel({nation:e,cost:4,slot:n[o+5]||n[i+5]})),a.add(b.rondel({nation:e,cost:6,slot:n[o+6]||n[i+6]}))}else n.forEach(n=>{a.add(b.rondel({nation:e,cost:0,slot:n}))});return a}nextNation(e){const n=e.when({AH:()=>p.IT,IT:()=>p.FR,FR:()=>p.GB,GB:()=>p.GE,GE:()=>p.RU,RU:()=>p.AH});return this.nations.get(n).controller?n:this.nextNation(n)}importAction(e){const n=new Set;for(const t of this.board.byNation.get(e))"shipyard"===this.board.graph.get(t).factoryType&&n.add(b.import({placements:[{province:t,unit:"fleet"}]})),n.add(b.import({placements:[{province:t,unit:"army"}]}));return n}buildFactoryAction(e){return new Set(e.when({AH:()=>["trieste","prague","lemburg"],IT:()=>["genoa","venice","florence"],FR:()=>["brest","dijon","marseille"],GB:()=>["dublin","sheffield","edinburgh"],GE:()=>["danzig","munich","cologne"],RU:()=>["kiev","st. petersburg","warsaw"]}).map(e=>b.buildFactory({province:e})))}factoryCount(e){let n=0;for(const t of this.board.byNation.get(e))this.provinces.get(t).factory&&n++;return n}}var N=[b.initialize({players:[{id:"Daniel",nation:p.RU},{id:"Claudia",nation:p.FR},{id:"Bert",nation:p.GB},{id:"Anton",nation:p.IT}]}),b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.noop,b.rondel({nation:p.AH,cost:0,slot:"import"}),b.import({placements:[{province:"trieste",type:"fleet"},{province:"lemberg",type:"army"}]}),b.noop,b.rondel({nation:p.IT,cost:0,slot:"investor"}),b.bondPurchase({nation:p.GE,player:"Daniel",cost:4}),b.rondel({nation:p.FR,cost:0,slot:"factory"}),b.buildFactory({province:"marseille"}),b.rondel({nation:p.GB,cost:0,slot:"production1"}),b.rondel({nation:p.GE,cost:0,slot:"production2"}),b.rondel({nation:p.RU,cost:0,slot:"investor"}),b.bondPurchase({nation:p.GE,player:"Anton",cost:6}),b.rondel({nation:p.AH,cost:0,slot:"production2"}),b.rondel({nation:p.IT,cost:0,slot:"production2"}),b.rondel({nation:p.FR,cost:0,slot:"production1"}),b.rondel({nation:p.GB,cost:0,slot:"maneuver1"}),b.maneuver({origin:"liverpool",destination:"northatlantic"}),b.maneuver({origin:"london",destination:"englishchannel"}),b.rondel({nation:p.GE,cost:0,slot:"maneuver2"}),b.maneuver({origin:"hamburg",destination:"northsea"}),b.maneuver({origin:"berlin",destination:"norway"}),b.rondel({nation:p.RU,cost:0,slot:"import"}),b.import({placements:[{province:"stpetersburg",type:"fleet"},{province:"moscow",type:"army"},{province:"moscow",type:"army"}]}),b.noop,b.noop,b.rondel({nation:p.AH,cost:0,slot:"maneuver2"}),b.maneuver({origin:"trieste",destination:"ioniansea"}),b.maneuver({origin:"lemberg",destination:"romania"}),b.maneuver({origin:"budapest",destination:"westbalkan"}),b.maneuver({origin:"vienna",destination:"tunis"}),b.rondel({nation:p.IT,cost:0,slot:"maneuver2"}),b.maneuver({origin:"naples",destination:"westernmediterraneansea"}),b.maneuver({origin:"rome",destination:"spain"}),b.rondel({nation:p.FR,cost:0,slot:"maneuver1"}),b.maneuver({origin:"marseille",destination:"westernmediterraneansea"}),b.fight({province:"westernmediterraneansea",incumbent:p.IT,challenger:p.FR}),b.maneuver({origin:"bordeaux",destination:"bayofbiscay"}),b.maneuver({origin:"paris",destination:"morocco"}),b.rondel({nation:p.GB,cost:0,slot:"investor"}),b.bondPurchase({nation:p.RU,player:"Bert",cost:6}),b.rondel({nation:p.GE,cost:0,slot:"taxation"}),b.rondel({nation:p.RU,cost:0,slot:"production2"}),b.rondel({nation:p.AH,cost:0,slot:"taxation"}),b.rondel({nation:p.IT,cost:0,slot:"production1"}),b.rondel({nation:p.FR,cost:0,slot:"production2"}),b.bondPurchase({nation:p.AH,player:"Claudia",cost:6}),b.rondel({nation:p.GB,cost:0,slot:"production2"}),b.rondel({nation:p.GE,cost:0,slot:"factory"}),b.buildFactory({province:"cologne"}),b.rondel({nation:p.RU,cost:0,slot:"maneuver2"}),b.maneuver({origin:"stpetersburg",destination:"balticsea"}),b.maneuver({origin:"odessa",destination:"blacksea"}),b.maneuver({origin:"moscow",destination:"sweden"}),b.maneuver({origin:"moscow",destination:"turkey"}),b.maneuver({origin:"moscow",destination:"lemberg"})];Vue.component("player",{props:["name","cash","bonds","current_player"],template:'\n  <li class="player">\n    <div v-if="name === current_player" class="current_player">\n      🤩\n    </div>\n    <div class="contents">\n      <h3>{{ name }}</h3>\n      <div>Cash: {{ cash }} million</div>\n      <div>\n        Bonds:\n        <ul class="bonds">\n          <bond\n            v-for="bond in bonds"\n            v-bind:nation="bond.nation.value"\n            v-bind:cost="bond.cost"\n            v-bind:key="bond.nation.value"\n          ></bond>\n        </ul>\n      </div>\n    </div>\n  </li>\n  '}),Vue.component("bond",{props:["nation","cost"],template:'<li class="bond">{{ nation }}{{ cost }}</li>'}),Vue.component("current-turn",{props:["type","payload"],template:"<div>{{ type }}{{ payload }}</div>"}),Vue.component("action",{props:["action","dispatch","text"],template:'<button v-on:click="dispatch(action)">{{ text }}</button>'});var O=Vue.component("app",{data:()=>({game:{},gameStarted:!1,rondel:""}),mounted(){},methods:{startGame:function(){this.game=A.fromLog(N.slice(0,2)),this.gameStarted=!0},flag:function(e){switch(e){case"AH":return"flags/ah.svg";case"IT":return"flags/it.svg";case"FR":return"flags/fr.svg";case"GB":return"flags/gb.svg";case"GE":return"flags/ge.svg";case"RU":return"flags/ru.svg"}},tickWithAction:function(e){this.game.tick(e),this.updateRondel()},actionToText:function(e){return"rondel"===e.type?e.payload.slot:"import"===e.type?`Import ${e.payload.unit} in ${e.payload.province}`:"buildFactory"===e.type?"Build factory in "+e.payload.province:void 0},updateRondel:function(){for(const[e,{rondelPosition:n}]of this.game.nations){if(null===n)continue;const t=document.getElementById(n),a=(t.getBBox(),document.createElementNS("http://www.w3.org/2000/svg","image"));a.setAttribute("height","20");const o=t.getTotalLength()/100;let i=0,r=0;for(let e=0;e<t.getTotalLength();e+=o){const n=t.getPointAtLength(e);i+=n.x,r+=n.y}a.setAttribute("x",i/100),a.setAttribute("y",r/100),a.setAttribute("href",this.flag(e.value)),t.parentNode.append(a)}}},template:'\n  <div v-if="gameStarted">\n    <ul class="players">\n      <player\n        v-for="player in game.players"\n        v-bind:name="player.name"\n        v-bind:cash="player.cash"\n        v-bind:bonds="player.bonds"\n        v-bind:current_player="game.currentPlayerName"\n        v-bind:key="player.name"\n      ></player>\n    </ul>\n    <div class="rondel" v-html="rondel"></div>\n    <current-turn\n      v-bind:type="game.log[game.log.length - 1].type"\n      v-bind:payload="game.log[game.log.length - 1].payload"\n    ></current-turn>\n    <div>\n      It is {{ game.currentNation.value }}\'s turn\n    </div>\n    <div class="buttons">\n      <action\n        v-for="action in game.availableActions"\n        v-bind:key="JSON.stringify(action)"\n        v-bind:action="action"\n        v-bind:text="actionToText(action)"\n        v-bind:dispatch="tickWithAction"\n      ></action>\n    </div>\n  </div>\n  <div v-else class="buttons">\n    <button v-on:click="startGame">\n      Start Game\n    </button>\n  </div>\n'});new Vue({el:"#app",render:e=>e(O)})}]);